name: Check builds
on:
  - push
  - pull_request

jobs:
  run-tests:
    name: Run tests
    runs-on: ${{ matrix.system.runner }}
    strategy:
      fail-fast: false
      matrix:
        system:
          - runner: ubuntu-latest
            cache-system: X64-Linux
            nix-system: x86_64-linux
          - runner: ubuntu-24.04-arm
            cache-system: ARM64-Linux
            nix-system: aarch64-linux
          - runner: macos-13
            cache-system: X64-macOS
            nix-system: x86_64-darwin
          - runner: macos-latest
            cache-system: ARM64-macOS
            nix-system: aarch64-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v18
      - name: Set up Nix caching
        uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Check system
        env:
          TARGET_SYSTEM: ${{ matrix.system.nix-system }}
        run: |
          current_system="$(nix eval --impure --raw --expr builtins.currentSystem)"
          if [[ "$current_system" != "$TARGET_SYSTEM" ]]; then
              printf '::error title=System mismatch::Running on %s, expected %s\n' "$current_system" "$TARGET_SYSTEM"
              exit 1
          fi
      - name: Run checks
        timeout-minutes: 345
        run: nix flake check --keep-going

  check-fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v18
      - name: Set up Nix caching
        uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Check formatting
        run: nix fmt -- --ci
